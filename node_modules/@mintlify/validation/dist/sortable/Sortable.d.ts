import { ISortable, SortOptions } from '@mintlify/models';
/**
 * Provides functionality to sort a given object based on provided sort options.
 *
 * @template T - The type of the object to be sorted.
 */
export declare class Sortable<T> implements ISortable<T> {
    readonly obj: Readonly<T>;
    readonly options: Readonly<SortOptions<T>>;
    constructor(obj: Readonly<T>, options?: Readonly<SortOptions<T>>);
    sort(out?: Partial<T> | []): T;
    /**
     * Creates a new sortable entity for a given object with optional sortable properties.
     *
     * @param obj - The object that is to be converted into a sortable.
     *
     * @returns A new sortable instance.
     */
    static createSortable<T>(obj: T & Partial<ISortable<T>>): Sortable<T>;
    /**
     * Creates a sortable entity from a given object and recursively does the same for its nested properties.
     *
     * @param obj - The root object to start from.
     *
     * @returns A new root sortable instance.
     */
    static createSortableRecursive<T = never>(obj: T & Partial<ISortable<T>>): Sortable<T>;
}
