import { SORT_DIRECTION, SortOptions } from '@mintlify/models';
export declare function isArray(x: object): x is [];
/**
 * Creates a comparison function for sorting purposes based on a given direction and an optional key.
 *
 * @template T - The type of the elements.
 *
 * @param direction - Specifies the direction for sorting (either ASCENDING or DESCENDING).
 * @param key - An optional key on which to base the sorting. If not provided, the object itself will be used.
 *
 * @returns A comparator function to be used with array's `sort` method.
 */
export declare function comparer<T>(direction: SORT_DIRECTION, key?: keyof T): (x: T, y: T) => 1 | -1;
/**
 * Sets a value for a specific key in the ordered object or array. If the value is an object, sorts it before setting.
 *
 * @template T - The type of the main object.
 * @template X - The type of the value to be set.
 *
 * @param key - The key or index where the value should be set.
 * @param value - The value to be set.
 * @param ordered - The target object or array where the value will be set.
 * @param direction - Optional sorting direction for the value if it's an object.
 */
export declare function set<T, X>(key: keyof T | number, value: X, ordered: Partial<T> | [], direction?: SORT_DIRECTION): void;
/**
 * Returns a setter function that can be used to set values in an ordered object based on keys and sorting options.
 *
 * @template T - The type of the main object.
 *
 * @param obj - The source object with values to be set.
 * @param ordered - The target object where values will be set in an ordered manner.
 *
 * @returns A setter function for specific keys of the source object.
 */
export declare function getSetter<T>(obj: T & Partial<SortOptions<T>>, ordered: Partial<T>): (key: keyof T) => void;
/**
 * Sorts an object based on the provided sorting options.
 *
 * @template T - The type of the object.
 *
 * @param obj - The object to be sorted.
 * @param options - Sorting options including direction and other parameters.
 *
 * @returns A new object with sorted entries.
 */
export declare function sort<T extends object>(obj: T, options?: Readonly<SortOptions<T>>): T;
