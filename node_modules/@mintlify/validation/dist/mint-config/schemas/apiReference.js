import { z } from 'zod';
export const openApiSchema = z.union([
    z.string({
        invalid_type_error: 'openapi must be a string or an array of strings of absolute or relative URLs pointing to your OpenAPI file.',
    }),
    z.array(z.string({
        invalid_type_error: 'openapi must be a string or an array of strings of absolute or relative URLs pointing to your OpenAPI file.',
    })),
]);
export const apiSchema = z
    .object({
    baseUrl: z
        .union([
        z.string().url('api.baseUrl must be a valid URL.'),
        z.array(z.string().url('api.baseUrl array entries must be valid URLs.')),
    ])
        .optional(),
    auth: z
        .object({
        method: z
            .enum(['bearer', 'basic', 'key', 'cobo'], {
            errorMap: () => {
                return {
                    message: 'api.auth.method has to be one of: bearer, basic, or key',
                };
            },
        })
            .optional(),
        name: z.string().optional(),
        inputPrefix: z.string().optional(),
    })
        .strict('api.auth can only contain method, name, and inputPrefix.')
        .optional(),
    playground: z
        .object({
        mode: z
            .enum(['show', 'simple', 'hide'], {
            errorMap: () => {
                return {
                    message: 'api.playground.mode must be one of the following strings: show, simple, or hide',
                };
            },
        })
            .optional()
            .default('show'),
    })
        .optional(),
    request: z
        .object({
        example: z
            .object({
            showOptionalParams: z.boolean().optional().default(false),
        })
            .optional(),
    })
        .optional(),
    maintainOrder: z
        .boolean({
        invalid_type_error: 'maintainOrder must be a boolean. Try writing true or false without the quotes.',
    })
        .optional(),
}, {
    invalid_type_error: 'api must be an object. The object can have baseUrl, auth, and playground as properties.',
})
    .strict('api can only contain baseUrl, auth, and playground as properties.');
